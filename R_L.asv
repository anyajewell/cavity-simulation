% Laser travels from RHS mirror to LHS mirror

function [step, Z_traveled, Z_position, E, Es] = R_L(step, Z_traveled, Z_position, E, Es, save_interval, num_steps, dz, L, H, R, amask)

    for n = 1:num_steps
        
        step = step + 1;
        Z_traveled(step) = step*dz; % record total distance propagated so far

        % Record current position within the cavity, AFTER the step has
        % been taken
        if step == 1 % this is the first step
            Z_position(step) = L/2 - dz;
        else
            Z_position(step) = Z_position(step-1) - dz;
        end

        % Propagation
        FE = fft2(E); % transform beam to frequency domain
        FE = FE.*fftshift(H).*R(Z_position(step), Z_position(step)-dz); % propagate beam in frequency domain 
        E = ifft2(FE); % transform back to space domain 
        E = E.*amask; % absorb energy at boundaries
        
        % Visualization
        I = 0.5*consts.eps0*consts.c*abs(E).^2;
        surf(X, Y, I/max(I(:)), 'LineStyle','none');
        ylabel('[m]')
        xlabel('[m]')
        title({
            sprintf('Laser Mode at Z = %.1f m', Z_traveled(step)), ...
            sprintf('Intra-Cavity Position = %.1f', Z_position(step))
        })
        hold on;
        plot3(x_circ2, y_circ2, zeros(size(x_circ2)), 'r-', 'LineWidth', 2); % plot mirror outline
        hold off;
        set(gcf,'Color','w'); % white figure background
        set(gca,'Color','w'); % white axes background
        axis('square')
        axis tight;
        view(2) % 2D view
        getframe();

        % Capture frame
        frame = getframe(gcf);
        writeVideo(v, frame);

        % Save E field snapshots
        if mod(step, save_interval) == 0
            step_label = sprintf('step_%d', step);
            Es.(step_label) = E; % save intermediate field
        end
    
    end
end